#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Fortnite Ultimate Spoofer 2025 - Specialized GUI
–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è Fortnite
"""

import tkinter as tk
from tkinter import ttk, messagebox, scrolledtext
import subprocess
import threading
import json
import os
import sys
import ctypes
from datetime import datetime
import random
import string
import psutil
import time

class FortniteSpooferGUI:
    def __init__(self, root):
        self.root = root
        self.root.title("üéÆ Fortnite Ultimate Spoofer 2025 - EAC Bypass")
        self.root.geometry("900x700")
        self.root.resizable(True, True)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∫–æ–Ω–∫—É –∏ —Å—Ç–∏–ª—å
        self.setup_style()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        if not self.is_admin():
            messagebox.showerror("‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞", 
                               "–ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!\n\n" +
                               "–ü–ö–ú –Ω–∞ —Ñ–∞–π–ª–µ ‚Üí '–ó–∞–ø—É—Å–∫ –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞'")
            sys.exit(1)
        
        # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        self.spoofing_active = tk.BooleanVar()
        self.auto_launch_fortnite = tk.BooleanVar(value=False)
        self.deep_clean_mode = tk.BooleanVar(value=True)
        self.eac_bypass_mode = tk.BooleanVar(value=True)
        self.stealth_mode = tk.BooleanVar(value=True)
        
        # –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        self.create_widgets()
        self.load_fortnite_config()
        self.check_fortnite_status()
        
    def is_admin(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
        try:
            return ctypes.windll.shell32.IsUserAnAdmin()
        except:
            return False
    
    def setup_style(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        style = ttk.Style()
        
        # Fortnite —Ü–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞
        self.colors = {
            'primary': '#0078D4',      # –°–∏–Ω–∏–π Fortnite
            'secondary': '#FF6B35',    # –û—Ä–∞–Ω–∂–µ–≤—ã–π –∞–∫—Ü–µ–Ω—Ç
            'success': '#00C851',      # –ó–µ–ª–µ–Ω—ã–π —É—Å–ø–µ—Ö
            'warning': '#FF8800',      # –û—Ä–∞–Ω–∂–µ–≤—ã–π –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
            'danger': '#FF4444',       # –ö—Ä–∞—Å–Ω—ã–π –æ—à–∏–±–∫–∞
            'dark': '#2C3E50',         # –¢–µ–º–Ω—ã–π —Ñ–æ–Ω
            'light': '#ECF0F1'         # –°–≤–µ—Ç–ª—ã–π —Ç–µ–∫—Å—Ç
        }
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ–º—ã
        style.theme_use('clam')
        
    def create_widgets(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        menubar = tk.Menu(self.root)
        self.root.config(menu=menubar)
        
        # –ú–µ–Ω—é Fortnite
        fortnite_menu = tk.Menu(menubar, tearoff=0)
        menubar.add_cascade(label="üéÆ Fortnite", menu=fortnite_menu)
        fortnite_menu.add_command(label="–ó–∞–ø—É—Å—Ç–∏—Ç—å Fortnite", command=self.launch_fortnite)
        fortnite_menu.add_command(label="–ó–∞–∫—Ä—ã—Ç—å Fortnite", command=self.close_fortnite)
        fortnite_menu.add_separator()
        fortnite_menu.add_command(label="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å EAC", command=self.check_eac_status)
        
        # –ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
        settings_menu = tk.Menu(menubar, tearoff=0)
        menubar.add_cascade(label="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", menu=settings_menu)
        settings_menu.add_command(label="–°–æ–∑–¥–∞—Ç—å —Ç–æ—á–∫—É –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è", command=self.create_restore_point)
        settings_menu.add_command(label="–≠–∫—Å–ø–æ—Ä—Ç –ø—Ä–æ—Ñ–∏–ª—è", command=self.export_profile)
        settings_menu.add_command(label="–ò–º–ø–æ—Ä—Ç –ø—Ä–æ—Ñ–∏–ª—è", command=self.import_profile)
        
        # –ú–µ–Ω—é –ø–æ–º–æ—â–∏
        help_menu = tk.Menu(menubar, tearoff=0)
        menubar.add_cascade(label="‚ùì –ü–æ–º–æ—â—å", menu=help_menu)
        help_menu.add_command(label="–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é", command=self.show_guide)
        help_menu.add_command(label="–û –ø—Ä–æ–≥—Ä–∞–º–º–µ", command=self.show_about)
        
        # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        main_container = ttk.Frame(self.root)
        main_container.pack(fill=tk.BOTH, expand=True, padx=10, pady=10)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º
        header_frame = ttk.Frame(main_container)
        header_frame.pack(fill=tk.X, pady=(0, 15))
        
        title_label = ttk.Label(header_frame, text="üéÆ FORTNITE ULTIMATE SPOOFER 2025", 
                               font=("Arial", 18, "bold"))
        title_label.pack()
        
        subtitle_label = ttk.Label(header_frame, text="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç EAC ‚Ä¢ Windows 11 24H2 Optimized", 
                                  font=("Arial", 10), foreground="gray")
        subtitle_label.pack()
        
        # –°—Ç–∞—Ç—É—Å –ø–∞–Ω–µ–ª—å
        self.create_status_panel(main_container)
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        self.create_main_settings(main_container)
        
        # –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        self.create_advanced_settings(main_container)
        
        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        self.create_control_buttons(main_container)
        
        # –õ–æ–≥ –ø–∞–Ω–µ–ª—å
        self.create_log_panel(main_container)
        
        # –°—Ç–∞—Ç—É—Å –±–∞—Ä
        self.create_status_bar()
        
    def create_status_panel(self, parent):
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ —Å—Ç–∞—Ç—É—Å–∞"""
        status_frame = ttk.LabelFrame(parent, text="üîç –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã", padding="10")
        status_frame.pack(fill=tk.X, pady=(0, 10))
        
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Ç–∫—É –¥–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤
        status_grid = ttk.Frame(status_frame)
        status_grid.pack(fill=tk.X)
        
        # –°—Ç–∞—Ç—É—Å Fortnite
        ttk.Label(status_grid, text="Fortnite:").grid(row=0, column=0, sticky=tk.W, padx=(0, 10))
        self.fortnite_status = ttk.Label(status_grid, text="‚ùå –ù–µ –∑–∞–ø—É—â–µ–Ω", foreground="red")
        self.fortnite_status.grid(row=0, column=1, sticky=tk.W)
        
        # –°—Ç–∞—Ç—É—Å EAC
        ttk.Label(status_grid, text="EasyAntiCheat:").grid(row=0, column=2, sticky=tk.W, padx=(20, 10))
        self.eac_status = ttk.Label(status_grid, text="‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω", foreground="red")
        self.eac_status.grid(row=0, column=3, sticky=tk.W)
        
        # –°—Ç–∞—Ç—É—Å —Å–ø—É—Ñ–∏–Ω–≥–∞
        ttk.Label(status_grid, text="–°–ø—É—Ñ–∏–Ω–≥:").grid(row=1, column=0, sticky=tk.W, padx=(0, 10))
        self.spoof_status = ttk.Label(status_grid, text="‚è∏Ô∏è –ì–æ—Ç–æ–≤", foreground="orange")
        self.spoof_status.grid(row=1, column=1, sticky=tk.W)
        
        # –°—Ç–∞—Ç—É—Å –∑–∞—â–∏—Ç—ã
        ttk.Label(status_grid, text="–ó–∞—â–∏—Ç–∞:").grid(row=1, column=2, sticky=tk.W, padx=(20, 10))
        self.protection_status = ttk.Label(status_grid, text="üõ°Ô∏è –ê–∫—Ç–∏–≤–Ω–∞", foreground="green")
        self.protection_status.grid(row=1, column=3, sticky=tk.W)
        
    def create_main_settings(self, parent):
        """–°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        settings_frame = ttk.LabelFrame(parent, text="üéØ –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–ø—É—Ñ–∏–Ω–≥–∞", padding="10")
        settings_frame.pack(fill=tk.X, pady=(0, 10))
        
        # –†–µ–∂–∏–º—ã —Å–ø—É—Ñ–∏–Ω–≥–∞
        modes_frame = ttk.Frame(settings_frame)
        modes_frame.pack(fill=tk.X, pady=(0, 10))
        
        ttk.Checkbutton(modes_frame, text="üîí EAC Bypass Mode (–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)", 
                       variable=self.eac_bypass_mode).pack(anchor=tk.W)
        ttk.Checkbutton(modes_frame, text="üßπ –ì–ª—É–±–æ–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å–ª–µ–¥–æ–≤", 
                       variable=self.deep_clean_mode).pack(anchor=tk.W)
        ttk.Checkbutton(modes_frame, text="üë§ Stealth Mode (–ù–µ–≤–∏–¥–∏–º–æ—Å—Ç—å)", 
                       variable=self.stealth_mode).pack(anchor=tk.W)
        ttk.Checkbutton(modes_frame, text="üöÄ –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ Fortnite –ø–æ—Å–ª–µ —Å–ø—É—Ñ–∏–Ω–≥–∞", 
                       variable=self.auto_launch_fortnite).pack(anchor=tk.W)
        
        # –ë—ã—Å—Ç—Ä—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏
        profiles_frame = ttk.LabelFrame(settings_frame, text="‚ö° –ë—ã—Å—Ç—Ä—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏", padding="5")
        profiles_frame.pack(fill=tk.X, pady=(10, 0))
        
        profiles_buttons = ttk.Frame(profiles_frame)
        profiles_buttons.pack()
        
        ttk.Button(profiles_buttons, text="üèÜ Competitive", 
                  command=lambda: self.apply_quick_profile("competitive")).pack(side=tk.LEFT, padx=5)
        ttk.Button(profiles_buttons, text="üé™ Casual", 
                  command=lambda: self.apply_quick_profile("casual")).pack(side=tk.LEFT, padx=5)
        ttk.Button(profiles_buttons, text="üî• Streamer", 
                  command=lambda: self.apply_quick_profile("streamer")).pack(side=tk.LEFT, padx=5)
        ttk.Button(profiles_buttons, text="üõ°Ô∏è Maximum Security", 
                  command=lambda: self.apply_quick_profile("max_security")).pack(side=tk.LEFT, padx=5)
        
    def create_advanced_settings(self, parent):
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        advanced_frame = ttk.LabelFrame(parent, text="üîß –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", padding="10")
        advanced_frame.pack(fill=tk.X, pady=(0, 10))
        
        # –°–æ–∑–¥–∞–µ–º notebook –¥–ª—è –≤–∫–ª–∞–¥–æ–∫
        notebook = ttk.Notebook(advanced_frame)
        notebook.pack(fill=tk.BOTH, expand=True)
        
        # –í–∫–ª–∞–¥–∫–∞ Hardware
        hardware_frame = ttk.Frame(notebook)
        notebook.add(hardware_frame, text="üíª Hardware")
        
        # HWID –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        hwid_frame = ttk.LabelFrame(hardware_frame, text="Hardware ID", padding="5")
        hwid_frame.pack(fill=tk.X, pady=5)
        
        hwid_controls = ttk.Frame(hwid_frame)
        hwid_controls.pack(fill=tk.X)
        
        self.hwid_var = tk.StringVar()
        ttk.Entry(hwid_controls, textvariable=self.hwid_var, width=50).pack(side=tk.LEFT, padx=(0, 5))
        ttk.Button(hwid_controls, text="üé≤ –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å", 
                  command=self.generate_hwid).pack(side=tk.LEFT)
        
        # MAC –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        mac_frame = ttk.LabelFrame(hardware_frame, text="MAC Address", padding="5")
        mac_frame.pack(fill=tk.X, pady=5)
        
        mac_controls = ttk.Frame(mac_frame)
        mac_controls.pack(fill=tk.X)
        
        self.mac_var = tk.StringVar()
        ttk.Entry(mac_controls, textvariable=self.mac_var, width=50).pack(side=tk.LEFT, padx=(0, 5))
        ttk.Button(mac_controls, text="üé≤ –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å", 
                  command=self.generate_mac).pack(side=tk.LEFT)
        
        # –í–∫–ª–∞–¥–∫–∞ System
        system_frame = ttk.Frame(notebook)
        notebook.add(system_frame, text="üñ•Ô∏è System")
        
        # –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        system_info = ttk.LabelFrame(system_frame, text="–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", padding="5")
        system_info.pack(fill=tk.BOTH, expand=True)
        
        self.system_info_text = scrolledtext.ScrolledText(system_info, height=8, width=70)
        self.system_info_text.pack(fill=tk.BOTH, expand=True)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        self.update_system_info()
        
    def create_control_buttons(self, parent):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
        control_frame = ttk.Frame(parent)
        control_frame.pack(fill=tk.X, pady=(0, 10))
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        main_buttons = ttk.Frame(control_frame)
        main_buttons.pack()
        
        self.start_button = ttk.Button(main_buttons, text="üöÄ –ó–ê–ü–£–°–¢–ò–¢–¨ –°–ü–£–§–ò–ù–ì", 
                                      command=self.start_spoofing, 
                                      style="Accent.TButton")
        self.start_button.pack(side=tk.LEFT, padx=5)
        
        self.stop_button = ttk.Button(main_buttons, text="‚èπÔ∏è –û–°–¢–ê–ù–û–í–ò–¢–¨", 
                                     command=self.stop_spoofing, 
                                     state="disabled")
        self.stop_button.pack(side=tk.LEFT, padx=5)
        
        ttk.Button(main_buttons, text="üßπ –û–ß–ò–°–¢–ò–¢–¨", 
                  command=self.clean_only).pack(side=tk.LEFT, padx=5)
        
        ttk.Button(main_buttons, text="üîÑ –ü–ï–†–ï–ó–ê–ì–†–£–ó–ò–¢–¨", 
                  command=self.restart_system).pack(side=tk.LEFT, padx=5)
        
    def create_log_panel(self, parent):
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ –ª–æ–≥–æ–≤"""
        log_frame = ttk.LabelFrame(parent, text="üìã –õ–æ–≥ –æ–ø–µ—Ä–∞—Ü–∏–π", padding="10")
        log_frame.pack(fill=tk.BOTH, expand=True)
        
        # –°–æ–∑–¥–∞–µ–º —Ñ—Ä–µ–π–º –¥–ª—è –ª–æ–≥–æ–≤ –∏ –∫–Ω–æ–ø–æ–∫
        log_container = ttk.Frame(log_frame)
        log_container.pack(fill=tk.BOTH, expand=True)
        
        # –¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è –ª–æ–≥–æ–≤
        self.log_text = scrolledtext.ScrolledText(log_container, height=12, width=80,
                                                 font=("Consolas", 9))
        self.log_text.pack(fill=tk.BOTH, expand=True, pady=(0, 5))
        
        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–æ–≥–∞–º–∏
        log_buttons = ttk.Frame(log_container)
        log_buttons.pack(fill=tk.X)
        
        ttk.Button(log_buttons, text="üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥–∏", 
                  command=self.clear_logs).pack(side=tk.LEFT, padx=(0, 5))
        ttk.Button(log_buttons, text="üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ª–æ–≥–∏", 
                  command=self.save_logs).pack(side=tk.LEFT, padx=(0, 5))
        ttk.Button(log_buttons, text="üîÑ –ê–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞", 
                  command=self.toggle_autoscroll).pack(side=tk.LEFT)
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        self.autoscroll = True
        self.log("üéÆ Fortnite Ultimate Spoofer 2025 –∑–∞–ø—É—â–µ–Ω")
        self.log("‚úÖ Windows 11 24H2 –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è")
        self.log("üõ°Ô∏è EAC Bypass –º–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
        
    def create_status_bar(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å –±–∞—Ä–∞"""
        self.status_bar = ttk.Frame(self.root)
        self.status_bar.pack(fill=tk.X, side=tk.BOTTOM)
        
        self.status_text = ttk.Label(self.status_bar, text="–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
        self.status_text.pack(side=tk.LEFT, padx=5)
        
        # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        self.activity_indicator = ttk.Label(self.status_bar, text="‚ö™")
        self.activity_indicator.pack(side=tk.RIGHT, padx=5)
        
    def generate_hwid(self):
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è HWID –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–ª—è Fortnite"""
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –æ–±—Ö–æ–¥–∞ EAC
        hwid_patterns = [
            "BFEBFBFF000906EA",  # Intel Core i7-10700K
            "BFEBFBFF000A0671",  # Intel Core i9-12900K  
            "BFEBFBFF00A20F12",  # AMD Ryzen 7 5800X
            "BFEBFBFF00A50F00"   # AMD Ryzen 9 5900X
        ]
        
        base_hwid = random.choice(hwid_patterns)
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –≤–∞—Ä–∏–∞—Ü–∏–∏
        suffix = ''.join(random.choices(string.ascii_uppercase + string.digits, k=8))
        hwid = base_hwid + "-" + suffix
        
        self.hwid_var.set(hwid)
        self.log(f"üé≤ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω HWID: {hwid}")
        
    def generate_mac(self):
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è MAC –∞–¥—Ä–µ—Å–∞ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–ª—è Fortnite"""
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º OUI –æ—Ç –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π —Å–µ—Ç–µ–≤—ã—Ö –∫–∞—Ä—Ç
        realistic_ouis = [
            "00:15:5D",  # Microsoft Hyper-V
            "52:54:00",  # QEMU/KVM
            "00:50:56",  # VMware
            "08:00:27",  # VirtualBox
            "00:1C:42",  # Parallels
            "00:E0:4C",  # Realtek
            "00:1B:21",  # Intel
            "00:25:90"   # SuperMicro
        ]
        
        oui = random.choice(realistic_ouis)
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –±–∞–π—Ç–∞
        last_bytes = ':'.join(['%02X' % random.randint(0, 255) for _ in range(3)])
        mac = f"{oui}:{last_bytes}"
        
        self.mac_var.set(mac)
        self.log(f"üé≤ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω MAC: {mac}")
        
    def apply_quick_profile(self, profile_type):
        """–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –±—ã—Å—Ç—Ä–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è"""
        profiles = {
            "competitive": {
                "name": "üèÜ Competitive Gaming",
                "description": "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–ª—è —Å–æ—Ä–µ–≤–Ω–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –∏–≥—Ä—ã"
            },
            "casual": {
                "name": "üé™ Casual Gaming", 
                "description": "–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –æ–±—ã—á–Ω–æ–π –∏–≥—Ä—ã"
            },
            "streamer": {
                "name": "üî• Streamer Mode",
                "description": "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è —Å—Ç—Ä–∏–º–∏–Ω–≥–∞ —Å –∑–∞—â–∏—Ç–æ–π –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏"
            },
            "max_security": {
                "name": "üõ°Ô∏è Maximum Security",
                "description": "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞ –∏ —Å–∫—Ä—ã—Ç–Ω–æ—Å—Ç—å"
            }
        }
        
        if profile_type in profiles:
            profile = profiles[profile_type]
            self.log(f"üìã –ü—Ä–∏–º–µ–Ω–µ–Ω –ø—Ä–æ—Ñ–∏–ª—å: {profile['name']}")
            self.log(f"‚ÑπÔ∏è {profile['description']}")
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è
            self.generate_hwid()
            self.generate_mac()
            
            # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–ø—Ü–∏–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–æ—Ñ–∏–ª—è
            if profile_type == "max_security":
                self.eac_bypass_mode.set(True)
                self.deep_clean_mode.set(True)
                self.stealth_mode.set(True)
            elif profile_type == "competitive":
                self.eac_bypass_mode.set(True)
                self.deep_clean_mode.set(True)
                self.stealth_mode.set(False)
                
    def update_system_info(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"""
        try:
            info = []
            info.append(f"üñ•Ô∏è –û–°: {os.name} {sys.platform}")
            info.append(f"üíæ –û–ó–£: {psutil.virtual_memory().total // (1024**3)} GB")
            info.append(f"üíΩ –î–∏—Å–∫ C: {psutil.disk_usage('C:').total // (1024**3)} GB")
            info.append(f"üîß CPU: {psutil.cpu_count()} —è–¥–µ—Ä")
            info.append(f"‚ö° –ó–∞–≥—Ä—É–∑–∫–∞ CPU: {psutil.cpu_percent()}%")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã Fortnite
            fortnite_processes = []
            for proc in psutil.process_iter(['pid', 'name']):
                if 'fortnite' in proc.info['name'].lower():
                    fortnite_processes.append(proc.info['name'])
            
            if fortnite_processes:
                info.append(f"üéÆ –ü—Ä–æ—Ü–µ—Å—Å—ã Fortnite: {', '.join(fortnite_processes)}")
            else:
                info.append("üéÆ –ü—Ä–æ—Ü–µ—Å—Å—ã Fortnite: –ù–µ –Ω–∞–π–¥–µ–Ω—ã")
                
            self.system_info_text.delete(1.0, tk.END)
            self.system_info_text.insert(tk.END, '\n'.join(info))
            
        except Exception as e:
            self.log(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {str(e)}")
            
    def check_fortnite_status(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Fortnite"""
        try:
            fortnite_running = False
            eac_running = False
            
            for proc in psutil.process_iter(['pid', 'name']):
                name = proc.info['name'].lower()
                if 'fortniteclient' in name:
                    fortnite_running = True
                elif 'easyanticheat' in name:
                    eac_running = True
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å—ã
            if fortnite_running:
                self.fortnite_status.config(text="‚úÖ –ó–∞–ø—É—â–µ–Ω", foreground="green")
            else:
                self.fortnite_status.config(text="‚ùå –ù–µ –∑–∞–ø—É—â–µ–Ω", foreground="red")
                
            if eac_running:
                self.eac_status.config(text="‚úÖ –ê–∫—Ç–∏–≤–µ–Ω", foreground="green")
            else:
                self.eac_status.config(text="‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω", foreground="red")
                
        except Exception as e:
            self.log(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: {str(e)}")
        
        # –ü–æ–≤—Ç–æ—Ä—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        self.root.after(5000, self.check_fortnite_status)

    def start_spoofing(self):
        """–ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–ø—É—Ñ–∏–Ω–≥–∞"""
        if self.spoofing_active.get():
            messagebox.showwarning("‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–°–ø—É—Ñ–∏–Ω–≥ —É–∂–µ –∞–∫—Ç–∏–≤–µ–Ω!")
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ Fortnite
        if self.is_fortnite_running():
            result = messagebox.askyesno("üéÆ Fortnite –∑–∞–ø—É—â–µ–Ω",
                                       "Fortnite —Å–µ–π—á–∞—Å –∑–∞–ø—É—â–µ–Ω. –ó–∞–∫—Ä—ã—Ç—å –µ–≥–æ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Å–ø—É—Ñ–∏–Ω–≥–∞?")
            if result:
                self.close_fortnite()
                time.sleep(3)  # –ñ–¥–µ–º –∑–∞–∫—Ä—ã—Ç–∏—è
            else:
                return

        self.log("üöÄ === –ó–ê–ü–£–°–ö FORTNITE ULTIMATE SPOOFING ===")
        self.log("üîí –†–µ–∂–∏–º EAC Bypass: " + ("‚úÖ –í–∫–ª—é—á–µ–Ω" if self.eac_bypass_mode.get() else "‚ùå –û—Ç–∫–ª—é—á–µ–Ω"))
        self.log("üßπ –ì–ª—É–±–æ–∫–∞—è –æ—á–∏—Å—Ç–∫–∞: " + ("‚úÖ –í–∫–ª—é—á–µ–Ω–∞" if self.deep_clean_mode.get() else "‚ùå –û—Ç–∫–ª—é—á–µ–Ω–∞"))
        self.log("üë§ Stealth Mode: " + ("‚úÖ –í–∫–ª—é—á–µ–Ω" if self.stealth_mode.get() else "‚ùå –û—Ç–∫–ª—é—á–µ–Ω"))

        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–ø—É—Ñ–∏–Ω–≥ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        threading.Thread(target=self._run_spoofing, daemon=True).start()

        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        self.start_button.config(state="disabled")
        self.stop_button.config(state="normal")
        self.spoofing_active.set(True)
        self.spoof_status.config(text="üîÑ –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è", foreground="orange")
        self.activity_indicator.config(text="üü°")

    def _run_spoofing(self):
        """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–ø—É—Ñ–∏–Ω–≥–∞"""
        try:
            self.log("üîß –ö–æ–º–ø–∏–ª—è—Ü–∏—è Fortnite —Å–ø—É—Ñ—Ñ–µ—Ä–∞...")

            # –ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø—É—Ñ—Ñ–µ—Ä –¥–ª—è Fortnite
            compile_result = subprocess.run([
                "g++", "-std=c++17", "-O2", "-static-libgcc", "-static-libstdc++",
                "-DUNICODE", "-D_UNICODE",
                "-o", "fortnite_spoofer.exe",
                "fortnite_spoofer.cpp",
                "-liphlpapi", "-lsetupapi", "-lcfgmgr32", "-ladvapi32",
                "-lshell32", "-luser32", "-lwbemuuid", "-lole32", "-loleaut32"
            ], capture_output=True, text=True, timeout=60)

            if compile_result.returncode != 0:
                self.log("‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ —Å–ø—É—Ñ—Ñ–µ—Ä–∞")
                self.log(f"–î–µ—Ç–∞–ª–∏: {compile_result.stderr}")
                self._reset_buttons()
                return

            self.log("‚úÖ –°–ø—É—Ñ—Ñ–µ—Ä —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")

            # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–ø—É—Ñ—Ñ–µ—Ä
            self.log("üéØ –ó–∞–ø—É—Å–∫ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ Fortnite —Å–ø—É—Ñ—Ñ–µ—Ä–∞...")

            spoof_args = ["fortnite_spoofer.exe"]

            if self.hwid_var.get():
                spoof_args.extend(["--hwid", self.hwid_var.get()])
            if self.mac_var.get():
                spoof_args.extend(["--mac", self.mac_var.get()])
            if self.eac_bypass_mode.get():
                spoof_args.append("--eac-bypass")
            if self.deep_clean_mode.get():
                spoof_args.append("--deep-clean")
            if self.stealth_mode.get():
                spoof_args.append("--stealth")

            result = subprocess.run(spoof_args, capture_output=True, text=True, timeout=120)

            if result.returncode == 0:
                self.log("‚úÖ Fortnite —Å–ø—É—Ñ–∏–Ω–≥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
                self.log("üõ°Ô∏è EAC –æ–±—Ö–æ–¥ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
                self.log("üßπ –°–ª–µ–¥—ã –æ—á–∏—â–µ–Ω—ã")
                self.spoof_status.config(text="‚úÖ –ê–∫—Ç–∏–≤–µ–Ω", foreground="green")
                self.activity_indicator.config(text="üü¢")

                # –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ Fortnite –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω
                if self.auto_launch_fortnite.get():
                    self.root.after(3000, self.launch_fortnite)  # –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã

            else:
                self.log(f"‚ùå –û—à–∏–±–∫–∞ —Å–ø—É—Ñ–∏–Ω–≥–∞: {result.stderr}")
                self.spoof_status.config(text="‚ùå –û—à–∏–±–∫–∞", foreground="red")
                self.activity_indicator.config(text="üî¥")

        except subprocess.TimeoutExpired:
            self.log("‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Å–ø—É—Ñ–∏–Ω–≥–∞")
            self.spoof_status.config(text="‚è∞ –¢–∞–π–º–∞—É—Ç", foreground="red")
        except FileNotFoundError:
            self.log("‚ùå –ö–æ–º–ø–∏–ª—è—Ç–æ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ MinGW-w64 –∏–ª–∏ Visual Studio Build Tools")
            self.spoof_status.config(text="‚ùå –ù–µ—Ç –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–∞", foreground="red")
        except Exception as e:
            self.log(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
            self.spoof_status.config(text="‚ùå –û—à–∏–±–∫–∞", foreground="red")

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        self.root.after(0, self._reset_buttons)

    def _reset_buttons(self):
        """–°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–æ–∫"""
        self.start_button.config(state="normal")
        self.stop_button.config(state="disabled")
        if not self.spoofing_active.get():
            self.activity_indicator.config(text="‚ö™")

    def stop_spoofing(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ø—É—Ñ–∏–Ω–≥–∞"""
        self.log("‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ø—É—Ñ–∏–Ω–≥–∞...")
        self.spoofing_active.set(False)
        self._reset_buttons()
        self.spoof_status.config(text="‚è∏Ô∏è –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω", foreground="orange")
        self.activity_indicator.config(text="üü°")

    def clean_only(self):
        """–¢–æ–ª—å–∫–æ –æ—á–∏—Å—Ç–∫–∞ –±–µ–∑ —Å–ø—É—Ñ–∏–Ω–≥–∞"""
        self.log("üßπ –ó–∞–ø—É—Å–∫ —Ä–µ–∂–∏–º–∞ –æ—á–∏—Å—Ç–∫–∏...")

        threading.Thread(target=self._run_clean_only, daemon=True).start()

    def _run_clean_only(self):
        """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –æ—á–∏—Å—Ç–∫–∏"""
        try:
            # –ó–∞–∫—Ä—ã–≤–∞–µ–º Fortnite –µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω
            if self.is_fortnite_running():
                self.close_fortnite()
                time.sleep(2)

            # –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ Fortnite
            cleanup_paths = [
                "C:\\Users\\%USERNAME%\\AppData\\Local\\FortniteGame\\Saved\\Logs",
                "C:\\Users\\%USERNAME%\\AppData\\Local\\FortniteGame\\Saved\\Config",
                "C:\\Users\\%USERNAME%\\AppData\\Local\\EpicGamesLauncher\\Saved\\Logs",
                "C:\\Windows\\Temp\\Fortnite*",
                "C:\\Windows\\Prefetch\\FORTNITECLIENT*.pf"
            ]

            cleaned_count = 0
            for path in cleanup_paths:
                try:
                    result = subprocess.run(f'del /q /f /s "{path}" 2>nul',
                                          shell=True, capture_output=True)
                    if result.returncode == 0:
                        cleaned_count += 1
                except:
                    pass

            self.log(f"‚úÖ –û—á–∏—â–µ–Ω–æ {cleaned_count} –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ñ–∞–π–ª–æ–≤")
            self.log("üßπ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")

        except Exception as e:
            self.log(f"‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏: {str(e)}")

    def launch_fortnite(self):
        """–ó–∞–ø—É—Å–∫ Fortnite"""
        self.log("üöÄ –ó–∞–ø—É—Å–∫ Fortnite...")

        # –ü—É—Ç–∏ –∫ Fortnite
        fortnite_paths = [
            "C:\\Program Files\\Epic Games\\Fortnite\\FortniteGame\\Binaries\\Win64\\FortniteClient-Win64-Shipping.exe",
            "C:\\Program Files (x86)\\Epic Games\\Fortnite\\FortniteGame\\Binaries\\Win64\\FortniteClient-Win64-Shipping.exe",
            "D:\\Epic Games\\Fortnite\\FortniteGame\\Binaries\\Win64\\FortniteClient-Win64-Shipping.exe"
        ]

        launched = False
        for path in fortnite_paths:
            if os.path.exists(path):
                try:
                    subprocess.Popen([path])
                    self.log(f"‚úÖ Fortnite –∑–∞–ø—É—â–µ–Ω: {path}")
                    launched = True
                    break
                except Exception as e:
                    self.log(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {str(e)}")

        if not launched:
            # –ü—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ Epic Games Launcher
            try:
                subprocess.Popen(["cmd", "/c", "start", "com.epicgames.launcher://apps/Fortnite?action=launch&silent=true"])
                self.log("‚úÖ Fortnite –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ Epic Games Launcher")
            except:
                self.log("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ Fortnite. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏–≥—Ä—É —á–µ—Ä–µ–∑ Epic Games Launcher")

    def close_fortnite(self):
        """–ó–∞–∫—Ä—ã—Ç–∏–µ Fortnite"""
        self.log("üîÑ –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ Fortnite...")

        processes_to_kill = [
            "FortniteClient-Win64-Shipping.exe",
            "EpicGamesLauncher.exe",
            "EpicWebHelper.exe",
            "CrashReportClient.exe",
            "UnrealCEFSubProcess.exe"
        ]

        killed_count = 0
        for process_name in processes_to_kill:
            try:
                result = subprocess.run(f'taskkill /f /im "{process_name}" 2>nul',
                                      shell=True, capture_output=True)
                if result.returncode == 0:
                    killed_count += 1
            except:
                pass

        if killed_count > 0:
            self.log(f"‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ {killed_count} –ø—Ä–æ—Ü–µ—Å—Å–æ–≤")
        else:
            self.log("‚ÑπÔ∏è –ü—Ä–æ—Ü–µ—Å—Å—ã Fortnite –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

    def is_fortnite_running(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—Å–∫–∞ Fortnite"""
        try:
            for proc in psutil.process_iter(['name']):
                if 'fortniteclient' in proc.info['name'].lower():
                    return True
        except:
            pass
        return False

    def check_eac_status(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ EAC"""
        self.log("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ EasyAntiCheat...")

        try:
            eac_processes = []
            for proc in psutil.process_iter(['pid', 'name']):
                name = proc.info['name'].lower()
                if 'easyanticheat' in name or 'eac' in name:
                    eac_processes.append(f"{proc.info['name']} (PID: {proc.info['pid']})")

            if eac_processes:
                self.log("‚úÖ EAC –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞–π–¥–µ–Ω—ã:")
                for proc in eac_processes:
                    self.log(f"  ‚Ä¢ {proc}")
            else:
                self.log("‚ùå EAC –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

        except Exception as e:
            self.log(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ EAC: {str(e)}")

    def create_restore_point(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ—á–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è"""
        self.log("üíæ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ—á–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã...")

        try:
            cmd = 'powershell -Command "Checkpoint-Computer -Description \'Fortnite Spoofer Backup\' -RestorePointType \'MODIFY_SETTINGS\'"'
            result = subprocess.run(cmd, shell=True, capture_output=True, text=True, timeout=60)

            if result.returncode == 0:
                self.log("‚úÖ –¢–æ—á–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
            else:
                self.log("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ—á–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è")
                self.log(f"–î–µ—Ç–∞–ª–∏: {result.stderr}")

        except subprocess.TimeoutExpired:
            self.log("‚è∞ –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ—á–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è")
        except Exception as e:
            self.log(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

    def restart_system(self):
        """–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–∏—Å—Ç–µ–º—ã"""
        result = messagebox.askyesno("üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞",
                                   "–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–∏—Å—Ç–µ–º—É —Å–µ–π—á–∞—Å?\n\n" +
                                   "–≠—Ç–æ –æ—Ç–º–µ–Ω–∏—Ç –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–ø—É—Ñ–∏–Ω–≥–∞.")
        if result:
            self.log("üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–∏—Å—Ç–µ–º—ã...")
            subprocess.run("shutdown /r /t 10", shell=True)
            self.log("‚è∞ –°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—Å—è —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥")

    def log(self, message):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ª–æ–≥"""
        timestamp = datetime.now().strftime("%H:%M:%S")
        log_message = f"[{timestamp}] {message}\n"

        self.log_text.insert(tk.END, log_message)

        if self.autoscroll:
            self.log_text.see(tk.END)

        self.root.update_idletasks()

    def clear_logs(self):
        """–û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤"""
        self.log_text.delete(1.0, tk.END)
        self.log("üóëÔ∏è –õ–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã")

    def save_logs(self):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ª–æ–≥–æ–≤"""
        try:
            timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
            filename = f"fortnite_spoofer_log_{timestamp}.txt"

            with open(filename, 'w', encoding='utf-8') as f:
                f.write(self.log_text.get(1.0, tk.END))

            self.log(f"üíæ –õ–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: {filename}")

        except Exception as e:
            self.log(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ª–æ–≥–æ–≤: {str(e)}")

    def toggle_autoscroll(self):
        """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∏"""
        self.autoscroll = not self.autoscroll
        status = "–≤–∫–ª—é—á–µ–Ω–∞" if self.autoscroll else "–æ—Ç–∫–ª—é—á–µ–Ω–∞"
        self.log(f"üîÑ –ê–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞ {status}")

    def load_fortnite_config(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Fortnite"""
        try:
            if os.path.exists("config.json"):
                with open("config.json", 'r', encoding='utf-8') as f:
                    config = json.load(f)

                fortnite_profile = config.get("game_profiles", {}).get("Fortnite_2025", {})
                if fortnite_profile:
                    self.log("üìã –ó–∞–≥—Ä—É–∂–µ–Ω –ø—Ä–æ—Ñ–∏–ª—å Fortnite 2025")

                    # –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è
                    advanced_settings = fortnite_profile.get("advanced_spoofing", {})
                    self.eac_bypass_mode.set(advanced_settings.get("process_hollowing_protection", True))
                    self.deep_clean_mode.set(True)  # –í—Å–µ–≥–¥–∞ –≤–∫–ª—é—á–µ–Ω–æ –¥–ª—è Fortnite

        except Exception as e:
            self.log(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {str(e)}")

    def export_profile(self):
        """–≠–∫—Å–ø–æ—Ä—Ç —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è"""
        try:
            profile_data = {
                "name": "Custom Fortnite Profile",
                "hwid": self.hwid_var.get(),
                "mac": self.mac_var.get(),
                "eac_bypass": self.eac_bypass_mode.get(),
                "deep_clean": self.deep_clean_mode.get(),
                "stealth_mode": self.stealth_mode.get(),
                "auto_launch": self.auto_launch_fortnite.get(),
                "created": datetime.now().isoformat()
            }

            timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
            filename = f"fortnite_profile_{timestamp}.json"

            with open(filename, 'w', encoding='utf-8') as f:
                json.dump(profile_data, f, indent=2, ensure_ascii=False)

            self.log(f"üíæ –ü—Ä–æ—Ñ–∏–ª—å —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω: {filename}")

        except Exception as e:
            self.log(f"‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –ø—Ä–æ—Ñ–∏–ª—è: {str(e)}")

    def import_profile(self):
        """–ò–º–ø–æ—Ä—Ç –ø—Ä–æ—Ñ–∏–ª—è"""
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
        self.log("üìÅ –§—É–Ω–∫—Ü–∏—è –∏–º–ø–æ—Ä—Ç–∞ –ø—Ä–æ—Ñ–∏–ª—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")

    def show_guide(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ"""
        guide_text = """üéÆ FORTNITE ULTIMATE SPOOFER 2025 - –†–£–ö–û–í–û–î–°–¢–í–û

üìã –ë–´–°–¢–†–´–ô –°–¢–ê–†–¢:
1. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ Fortnite –∑–∞–∫—Ä—ã—Ç
2. –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å"
3. –í–∫–ª—é—á–∏—Ç–µ "EAC Bypass Mode"
4. –ù–∞–∂–º–∏—Ç–µ "–ó–ê–ü–£–°–¢–ò–¢–¨ –°–ü–£–§–ò–ù–ì"
5. –î–æ–∂–¥–∏—Ç–µ—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
6. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Fortnite

üîí –†–ï–ñ–ò–ú–´:
‚Ä¢ EAC Bypass - –æ–±—Ö–æ–¥ Easy Anti-Cheat
‚Ä¢ –ì–ª—É–±–æ–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ - —É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–ª–µ–¥–æ–≤
‚Ä¢ Stealth Mode - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫—Ä—ã—Ç–Ω–æ—Å—Ç—å
‚Ä¢ –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ Fortnite

‚ö° –ë–´–°–¢–†–´–ï –ü–†–û–§–ò–õ–ò:
‚Ä¢ Competitive - –¥–ª—è —Å–æ—Ä–µ–≤–Ω–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –∏–≥—Ä—ã
‚Ä¢ Casual - –¥–ª—è –æ–±—ã—á–Ω–æ–π –∏–≥—Ä—ã
‚Ä¢ Streamer - –¥–ª—è —Å—Ç—Ä–∏–º–∏–Ω–≥–∞
‚Ä¢ Maximum Security - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞

‚ö†Ô∏è –í–ê–ñ–ù–û:
‚Ä¢ –í—Å–µ–≥–¥–∞ —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ —Ç–æ—á–∫—É –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤—É—é—Ç –¥–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞ —Å–≤–æ–π —Å—Ç—Ä–∞—Ö –∏ —Ä–∏—Å–∫
‚Ä¢ –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —á–∏—Ç—ã –≤–º–µ—Å—Ç–µ —Å–æ —Å–ø—É—Ñ—Ñ–µ—Ä–æ–º

üÜò –ü–†–û–ë–õ–ï–ú–´:
‚Ä¢ –ï—Å–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç - –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É
‚Ä¢ –ü—Ä–∏ –æ—à–∏–±–∫–∞—Ö - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
‚Ä¢ –î–ª—è —Å–±—Ä–æ—Å–∞ - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ—á–∫—É –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è"""

        messagebox.showinfo("üìñ –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é", guide_text)

    def show_about(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–≥—Ä–∞–º–º–µ"""
        about_text = """üéÆ FORTNITE ULTIMATE SPOOFER 2025

üî• –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø—É—Ñ—Ñ–µ—Ä –¥–ª—è Fortnite
üõ°Ô∏è –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –æ–±—Ö–æ–¥–∞ EasyAntiCheat
üöÄ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Windows 11 24H2

‚ú® –í–û–ó–ú–û–ñ–ù–û–°–¢–ò:
‚Ä¢ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Å–ø—É—Ñ–∏–Ω–≥ Hardware ID
‚Ä¢ –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ MAC –∞–¥—Ä–µ—Å–∞
‚Ä¢ –ì–ª—É–±–æ–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å–ª–µ–¥–æ–≤ Fortnite
‚Ä¢ –û–±—Ö–æ–¥ –¥–µ—Ç–µ–∫—Ü–∏–∏ EAC 2025
‚Ä¢ SMBIOS –∏ PCI —Å–ø—É—Ñ–∏–Ω–≥
‚Ä¢ WMI –∑–∞–ø—Ä–æ—Å—ã –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è

‚ö†Ô∏è –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨:
‚Ä¢ –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã–µ
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ—á–µ–∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
‚Ä¢ –ü–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–π

üéØ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –î–õ–Ø FORTNITE:
‚Ä¢ –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã –¥–ª—è –æ–±—Ö–æ–¥–∞ EAC
‚Ä¢ –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ —Å–µ—Ä–∏–π–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
‚Ä¢ –û—á–∏—Å—Ç–∫–∞ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –¥–ª—è Fortnite —Å–ª–µ–¥–æ–≤
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –¥–µ—Ç–µ–∫—Ü–∏–∏ 2025

üíª –°–ò–°–¢–ï–ú–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø:
‚Ä¢ Windows 11 24H2 (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
‚Ä¢ –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
‚Ä¢ MinGW-w64 –∏–ª–∏ Visual Studio Build Tools
‚Ä¢ Python 3.8+ (–¥–ª—è GUI)

‚öñÔ∏è –ü–†–ê–í–û–í–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö
—Ü–µ–ª–µ–π. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö —Ü–µ–ª—è—Ö –∏–ª–∏ –¥–ª—è –Ω–∞—Ä—É—à–µ–Ω–∏—è
–ø—Ä–∞–≤–∏–ª –∏–≥—Ä –∑–∞–ø—Ä–µ—â–µ–Ω–æ. –ê–≤—Ç–æ—Ä—ã –Ω–µ –Ω–µ—Å—É—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞
–ª—é–±—ã–µ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.

üîó GitHub: https://github.com/kipeloi2/spoof-clean
üìß –ü–æ–¥–¥–µ—Ä–∂–∫–∞: Issues –Ω–∞ GitHub

–í–µ—Ä—Å–∏—è: 2.0 Fortnite Edition
–î–∞—Ç–∞: 2025"""

        messagebox.showinfo("‚ÑπÔ∏è –û –ø—Ä–æ–≥—Ä–∞–º–º–µ", about_text)

def main():
    root = tk.Tk()
    app = FortniteSpooferGUI(root)
    root.mainloop()

if __name__ == "__main__":
    main()
